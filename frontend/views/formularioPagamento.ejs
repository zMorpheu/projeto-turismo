<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Archivo:wght@700&family=Poppins:ital@1&family=Roboto&display=swap" rel="stylesheet">

  <link rel="stylesheet" type="text/css" href="css/formulario.css">

  <title>Formulário de Pagamento</title>
</head>
<body>
  <section id="page-lading-content">
    <nav>
      <header class="page-header">
        <nav class="top-bar-container">
          <a href="/">
            <h2>Projeto Turismo</h2>
          </a>
        </nav>
        <nav class="alertContainer">
          <nav class="alert alert-success" role="alert" id="alertSuccess">
            <strong>Sucesso!</strong> &nbsp; Pagamento cadastrado com sucesso!
            <button type="button" class="close" data-dismiss="alert" aria-label="Close" onclick="ocultarAlerta('alertSuccess')">
              <span aria-hidden="true">&times;</span>
            </button>
          </nav>
        </nav>
        <nav class="alertContainer">
          <nav class="alert alert-danger" role="alert" id="alertErro">
            <strong>Erro!</strong> &nbsp; Pagamento não pode ser cadastrado.
            <button type="button" class="close" data-dismiss="alert" aria-label="Close" onclick="ocultarAlerta('alertErro')">
              <span aria-hidden="true">&times;</span>
            </button>
          </nav>
        </nav>
      </header>
    </nav>
  </section>
  <section class="formContainer">
    <nav class="formItens">
      <form id="form" method="post">
        <h2 class="tittleForm positionPayment">Cadastro de Pagamento</h2>
        <label for="id_cliente" class="labelName"> Nome do cliente
          <select name="id_cliente" id="id_cliente" class="selectStyle" required>
            <option value="">Selecione</option>
          </select>
        </label>
        <label for="valor" class="labelName"> Valor
          <input type="number" class="inputStyle" step="0.01" id="valor" min="0.01" required>
        </label>
        <label for="data_pagamento" class="labelName"> Data do pagamento
          <input type="date" class="inputStyle" id="data_pagamento" required>
        </label>
        <nav class="buttonsContainer">
          <input type="reset" class="inputButton " value="Cancelar" />
          <input type="submit" class="inputButton" value="Enviar" />
        </nav>
      </form>
    </nav>
  </section>
  <script>

    this.ocultarAlerta('alertSuccess')
    this.ocultarAlerta('alertErro')
    this.getClientes()

    const urlParams = new URLSearchParams(window.location.search)
    const id = urlParams.get('id')

    if(id) {
      this.editarPagamento(id)
      this.salvarMudancas()
    } else {
      this.adicionarPagamento()
    }

    function editarPagamento(id) {

      var request = new XMLHttpRequest()

      request.open('GET', `http://localhost:3000/pagamentos/${id}`, true)
      
      request.onload = function () {
        
        var data = JSON.parse(this.response)
        
        if (request.status >= 200 && request.status < 400) {
          data.forEach(pagamento => {
            document.getElementById('id_cliente').value = pagamento.id_cliente;
            document.getElementById('valor').value = pagamento.valor;
            document.getElementById('data_pagamento').value = pagamento.data_pagamento;
          })
        }
      }
      request.send()
    }

    function adicionarPagamento() {
      var form = document.getElementById('form')
  
      form.addEventListener('submit', function(e){
      e.preventDefault()

      var id_cliente = document.getElementById('id_cliente').value
      var valor = document.getElementById('valor').value
      var data_pagamento = document.getElementById('data_pagamento').value
  
      fetch('http://localhost:3000/pagamentos', {
        method: 'POST',
        body: JSON.stringify({
          id_cliente:id_cliente,
          valor:valor,
          data_pagamento: data_pagamento,
          status: 1
        }),
        headers: {
          'Content-type': 'application/json; charset=UTF-8',
        }
        })
        .then(function(response) {
          return response.json()
        })
        .then(function(data){
          this.exibirAlert('alertSuccess')
        }).catch(error => {
          this.exibirAlert('alertErro')
          console.error('Error:', error)
        }); 
      });

    }

    function salvarMudancas() {
      var form = document.getElementById('form')
  
      form.addEventListener('submit', function(e){
      e.preventDefault()
      
      var id_cliente = document.getElementById('id_cliente').value
      var valor = document.getElementById('valor').value
      var data_pagamento = document.getElementById('data_pagamento').value
        
      fetch(`http://localhost:3000/pagamentos/${id}`, {
        method: 'PATCH',
        body: JSON.stringify({
          id_cliente:id_cliente,
          valor:valor,
          data_pagamento: data_pagamento,
          status: 1
        }),
        headers: {
          'Content-type': 'application/json; charset=UTF-8',
        }
        })
        .then(function(response) { 
          return response.json()
        })
        .then(function(data){
          this.exibirAlert('alertSuccess')
          console.log(data)
        }).catch(error => {
          this.exibirAlert('alertErro')
          console.error('Error:', error)
        });
      });
    }
    
    function exibirAlert(value) {
      document.getElementById(value).style.display = "block";
    }

    function ocultarAlerta(value) {
      document.getElementById(value).style.display = "none"
    }
    
    function getClientes() {

      var request = new XMLHttpRequest()

      request.open('GET', 'http://localhost:3000/clientes', true)

      const app = document.getElementById('id_cliente')

      request.onload = function () {
        var data = JSON.parse(this.response)

        if (request.status >= 200 && request.status < 400) {
          data.forEach(cliente => {
            
            const option = document.createElement('option')
            option.setAttribute('value', `${cliente.id_cliente}`)
            option.textContent = cliente.nome

            app.appendChild(option)

          })
        } else {
            console.log('error')
        }
      }
      request.send()
    }
    
</script>
</body>
</html>